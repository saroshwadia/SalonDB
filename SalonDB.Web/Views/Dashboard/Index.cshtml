@model SalonDB.Web.Models.POSViewModel
@{String CurrentDate;}
@{String ChartDate;}
@{CurrentDate = DateTime.Now.ToLongDateString();}
@{ChartDate = DateTime.Now.ToString("MMMM, yyyy");}
@{bool UserLoggedIn = Model.StaffEnt != null;}
@{int Counter = 0;}

@{
    ViewBag.Title = "Home Page";
}

<br />

@*<h1>Logged in User: @Model.StaffName</h1>*@

<br />

<div class="container-fluid">

    <div class="row">

        <div class="col-md-8">

            <div class="panel panel-primary col-md-6 fixed-panel300">

                <div class="panel-heading" style="font-weight:bold">Appointments</div>
                <h1 style="text-align:center; margin-bottom:0px">Today:</h1>
                @*<h1 style="text-align:center; margin-top:0px; margin-bottom:25px; color:skyblue"> @Model.TotalAppointmentsToday</h1>*@

                <h1 style="text-align:center; margin-top:0px; margin-bottom:25px; color:skyblue">
                    <a href='@(Url.Action("Index", "Appointment"))' style="color:skyblue">@Model.TotalAppointmentsToday</a>
                </h1>

                <div class="panel panel-primary col-md-6">
                    <h4 style="text-align:center; margin-bottom:0px">Last week: </h4>
                    <h1 style="text-align:center; margin-top:0px; color:skyblue">@Model.TotalAppointmentsLastWeek</h1>
                </div>
                <div class="panel panel-primary col-md-6">
                    <h4 style="text-align:center; margin-bottom:0px">Last Year:</h4>
                    <h1 style="text-align:center; margin-top:0px; color:skyblue">@Model.TotalAppointmentsLastYear</h1>
                </div>
            </div>
            <div class="panel panel-primary col-md-6 fixed-panel300">
                <div class="panel-heading" style="font-weight:bold">Sales for @CurrentDate</div>
                @(    Html.EJ().Chart("ChartContainer")
                .Palette(pl => { pl.Add("skyblue"); pl.Add("grey"); pl.Add("orange"); })

                    //Customize primary x-axis
                    .PrimaryXAxis(x => x.Range(xi => xi.Interval(1))
                         .LabelIntersectAction(LabelIntersectAction.Rotate90))

                .CommonSeriesOptions(common =>
                         common.DataSource(Model.ChartSalesByHourCol)

                          .XName("Name")

                          .Type(SeriesType.Column)
                .Tooltip(tooltip => tooltip.Visible(true))
                )

                .Series(sr =>
                {
                    sr.YName("Value1").Name("Sales").Add();
                }
                )

                //Customize chart title

                .Size(sz => sz.Width("300").Height("300px"))

                .IsResponsive(true)
                )

            </div>

            <div class="panel panel-primary col-md-6">
                <div class="panel-heading" style="font-weight:bold">Top (@Model.ServiceCol.Count) Selling Services</div>
                <div class="panel-body">
                    <table class="table table-bordered table-striped table-hover ">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Service Name</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{Counter = 0;}
                            @foreach (var oEnt in Model.ServiceCol)
                            {
                                Counter++;
                                <tr>
                                    <td>@Counter</td>
                                    <td>@oEnt.Name</td>
                                    <td>@oEnt.Total.ToString("C")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @*<div class="panel-footer">Top (@Model.ServiceCol.Count) Selling Products</div>*@
            </div>

            <div class="panel panel-primary col-md-6">
                <div class="panel-heading" style="font-weight:bold">Top (@Model.ServiceCol.Count) Selling Products</div>
                <div class="panel-body">
                    <table class="table table-bordered table-striped table-hover ">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Product Name</th>
                                <th>Total</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ Counter = 0;}
                            @foreach (var oEnt in Model.ProductCol)
                            {
                                Counter++;
                                <tr>
                                    <td>@Counter</td>
                                    <td>@oEnt.Name</td>
                                    <td>@oEnt.Total.ToString("C")</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @*<div class="panel-footer">Top Selling Products.</div>*@
            </div>

        </div>

        <div class="col-md-4">
            <div class="col-md-12">
                <div class="panel panel-primary col-md-12">
                    <div class="panel-heading" style="font-weight:bold">Total Sales for @ChartDate</div>
                    <div class="panel-body">
                        <h1 style="text-align:center; color:skyblue">@Model.TotalSales.ToString("C")</h1>
                    </div>
                    @*<div class=" panel-footer"*@
                </div>

            </div>

            <div class="col-md-12">

                <div class="panel panel-primary col-md-12">
                    <div class="panel-heading" style="font-weight:bold">Sales for @ChartDate</div>
                    <div class="panel-body">
                        @(
                Html.EJ().Chart("chartcontainer1")
                .Palette(pl => { pl.Add("grey"); pl.Add("skyblue"); pl.Add("orange"); })

                //Customize primary x-axis
                .PrimaryXAxis(ax => ax.ValueType(AxisValueType.Category))

                //Common settings for all the series
                .CommonSeriesOptions(common =>

                    //All the series uses same data source
                    common.DataSource(Model.ChartSalesByStaffCol)

                          //X-values are same for all the series
                          .XName("Name")

                          .Type(SeriesType.Bar)

                          .Tooltip(tooltip => tooltip.Visible(true))
                )

                //Bind data with series
                .Series(sr =>
                {

                    foreach (var item in ViewBag.Category as Dictionary<string, string>)
                    {
                        sr.YName(item.Key).Name(item.Value).Add();
                    }

                })

                //Customize chart title
                .Title(title => title.Text("Sales Revenue by Staff"))

                .Size(sz => sz.Width("300").Height("300px"))

                .IsResponsive(true)
                        )
                    </div>
                    @*<div class="panel-footer">Chart(s) of the day.</div>*@
                </div>

            </div>

            <div class="col-md-12">

                <div class="panel panel-primary col-md-12">
                    <div class="panel-heading" style="font-weight:bold">Sales for @ChartDate</div>
                    <div class="panel-body">
                        @(
                Html.EJ().Chart("chartcontainer2")
                .Palette(pl => { pl.Add("grey"); pl.Add("skyblue"); pl.Add("orange"); })

                //Customize primary x-axis
                .PrimaryXAxis(ax => ax.ValueType(AxisValueType.Category))

                //Common settings for all the series
                .CommonSeriesOptions(common =>

                    //All the series uses same data source
                    common.DataSource(Model.ChartSalesByStoreCol)

                          //X-values are same for all the series
                          .XName("Name")

                          .Type(SeriesType.Bar)

                          .Tooltip(tooltip => tooltip.Visible(true))
                )

                //Bind data with series
                .Series(sr =>
                {

                    foreach (var item in ViewBag.Category as Dictionary<string, string>)
                    {
                        sr.YName(item.Key).Name(item.Value).Add();
                    }

                })

                //Customize chart title
                .Title(title => title.Text("Sales Revenue by Store"))

                .Size(sz => sz.Width("300").Height("300px"))

                .IsResponsive(true)
                        )
                    </div>
                    @*<div class="panel-footer">Chart(s) of the day.</div>*@
                </div>

            </div>

        </div>

    </div>

</div>


<script>
    function OndataLabel(sender) {
        sender.data.location.x = sender.data.location.x + 20;
    }
    $("#controlarea").css("visibility", "visible");
</script>
